{
  "name": "easy-cipher-content",
  "icon": "resource/icon.png",
  "displayName": "Easy Cipher Content",
  "description": "A powerful VS Code extension for securing both text and binary files with industry-standard encryption algorithms. Easily protect your sensitive data while maintaining a seamless workflow in your development environment.",
  "version": "1.0.1",
  "publisher": "piperliu",
  "repository": {
    "type": "git",
    "url": "https://github.com/PiperLiu/easy-cipher-content"
  },
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "easy-cipher-content.encrypt",
        "title": "ðŸ”’ Encrypt",
        "icon": "$(lock)"
      },
      {
        "command": "easy-cipher-content.decrypt",
        "title": "ðŸ”“ Decrypt",
        "icon": "$(unlock)"
      },
      {
        "command": "easy-cipher-content.encryptWorkspace",
        "title": "ðŸ”’ Encrypt All Files in Workspace",
        "icon": "$(lock)"
      },
      {
        "command": "easy-cipher-content.decryptWorkspace",
        "title": "ðŸ”“ Decrypt All Files in Workspace",
        "icon": "$(unlock)"
      },
      {
        "command": "easy-cipher-content.encryptSpecificFiles",
        "title": "ðŸ”’ Encrypt Specific Files or Directories",
        "icon": "$(lock)"
      },
      {
        "command": "easy-cipher-content.decryptSpecificFiles",
        "title": "ðŸ”“ Decrypt Specific Files or Directories",
        "icon": "$(unlock)"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "easy-cipher-content.encrypt",
          "group": "navigation"
        },
        {
          "command": "easy-cipher-content.decrypt",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Easy Cipher Content",
      "properties": {
        "easy-cipher-content.algorithm": {
          "type": "string",
          "enum": [
            "aes-gcm",
            "chacha20-poly1305"
          ],
          "default": "aes-gcm",
          "description": "encrypt and decrypt algorithm"
        },
        "easy-cipher-content.use_env": {
          "type": "boolean",
          "default": true,
          "description": "use env for encryption key"
        },
        "easy-cipher-content.json_path": {
          "type": "string",
          "default": "",
          "description": "if use_env is false, json_path should be set for reading encryption key"
        },
        "easy-cipher-content.textFileExtensions": {
          "type": "array",
          "default": [
            ".txt",
            ".md",
            ".markdown",
            ".json",
            ".js",
            ".jsx",
            ".ts",
            ".tsx",
            ".html",
            ".htm",
            ".css",
            ".scss",
            ".less",
            ".py",
            ".java",
            ".rb",
            ".c",
            ".cpp",
            ".h",
            ".cs",
            ".go",
            ".php",
            ".pl",
            ".sh",
            ".bash",
            ".yaml",
            ".yml",
            ".xml",
            ".svg",
            ".sql",
            ".ini",
            ".conf",
            ".toml",
            ".rst",
            ".tex",
            ".gitignore"
          ],
          "description": "Extensions of files that should be treated as text files"
        },
        "easy-cipher-content.ignoreFile": {
          "type": "string",
          "default": ".easy-cipher-content-ignore",
          "description": "Name of the file containing patterns to ignore during batch operations"
        },
        "easy-cipher-content.deleteOriginalAfterEncryption": {
          "type": "boolean",
          "default": true,
          "description": "Delete the original file after encryption (applies to binary files)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.24.2",
    "eslint": "^9.19.0",
    "npm-run-all": "^4.1.5",
    "sinon": "^19.0.2",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "easy-cipher-mate": "^1.1.0",
    "ignore": "^7.0.3"
  }
}
